name: CI - Build, Test, SonarCloud & Docker

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Run unit tests
        run: mvn -B clean verify

      - name: SonarCloud scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=maheedhar-dev_springsonardevops
            -Dsonar.organization=maheedhar-dev
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Build Docker images
        run: docker compose build

      - name: Start services
        run: docker compose up -d

      - name: Wait for app health
        run: |
          for i in {1..30}; do
            if [ "$(docker inspect --format='{{.State.Health.Status}}' springsonardevops-app)" = "healthy" ]; then
              echo "App is healthy!"
              exit 0
            fi
            echo "Waiting for app to be healthy..."
            sleep 10
          done
          echo "App did not become healthy in time."
          docker logs springsonardevops-app
          exit 1

      - name: Smoke test actuator health
        run: |
          curl -f http://localhost:8083/actuator/health || (
            echo "❌ Actuator health endpoint failed"
            docker logs springsonardevops-app
            exit 1
          )
          echo "✅ Actuator health endpoint OK"

      - name: Shutdown services
        if: always()
        run: docker compose down -v

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push maheedhar429/springsonardevops:latest
